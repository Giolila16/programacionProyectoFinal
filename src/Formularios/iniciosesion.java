/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Formularios;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author kdeke
 */
public class iniciosesion extends javax.swing.JFrame {
    public static String usuarioLogueado = null; //añadido para tener el nombre de la variable
    
    public iniciosesion() {
        initComponents();
        
        this.setLocationRelativeTo(this);
        setTitle("Ingresa tu Usuario, Contraseña y tu Cargo para poder brindarte una ayuda más personalizada");
        cargarCargos();
        Metodos.configurarFondoCompleto(this, IniciosesionPan, "/imagenes/FondoInicio.jpg");

        // ----- Texto “placeholder” en UsuarioText -----
        UsuarioText.setText("Usuario");
        UsuarioText.setForeground(Color.GRAY);
        UsuarioText.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent e) {
                if (UsuarioText.getText().equals("Usuario")) {
                    UsuarioText.setText("");
                    UsuarioText.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(java.awt.event.FocusEvent e) {
                if (UsuarioText.getText().isEmpty()) {
                    UsuarioText.setForeground(Color.GRAY);
                    UsuarioText.setText("Usuario");
                }
            }
        });

        // ----- Texto “placeholder” en ContrasenaText -----
        ContrasenaText.setEchoChar((char) 0);
        ContrasenaText.setText("Contraseña");
        ContrasenaText.setForeground(Color.GRAY);
        ContrasenaText.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent e) {
                if (String.valueOf(ContrasenaText.getPassword()).equals("Contraseña")) {
                    ContrasenaText.setText("");
                    ContrasenaText.setEchoChar('•');
                    ContrasenaText.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(java.awt.event.FocusEvent e) {
                if (String.valueOf(ContrasenaText.getPassword()).isEmpty()) {
                    ContrasenaText.setEchoChar((char) 0);
                    ContrasenaText.setText("Contraseña");
                    ContrasenaText.setForeground(Color.GRAY);
                }
            }
        });
    }

    // ----- MÉTODO CORREGIDO: cargarCargos() -----
   private void cargarCargos() {
    // 1) Limpiamos el ComboBox
    CargoCombo.removeAllItems();

    // 2) listarCargos() devuelve List<String>, así que lo asignamos a List<String>
    List<String> listaRoles = Usuarios.listarCargos();

    // 3) Recorremos cada rol (String) y lo agregamos al ComboBox
    for (String rol : listaRoles) {
        CargoCombo.addItem(rol);
    }

    }

   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IniciosesionPan = new javax.swing.JPanel();
        UsuarioText = new javax.swing.JTextField();
        ContrasenaText = new javax.swing.JPasswordField();
        CargoCombo = new javax.swing.JComboBox<String>();
        InicioSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        IniciosesionPan.setOpaque(false);

        UsuarioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuarioTextActionPerformed(evt);
            }
        });

        ContrasenaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContrasenaTextActionPerformed(evt);
            }
        });

        CargoCombo.setFocusable(false);
        CargoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargoComboActionPerformed(evt);
            }
        });

        InicioSesion.setBackground(new java.awt.Color(153, 0, 0));
        InicioSesion.setText("INICIAR SESION");
        InicioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InicioSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout IniciosesionPanLayout = new javax.swing.GroupLayout(IniciosesionPan);
        IniciosesionPan.setLayout(IniciosesionPanLayout);
        IniciosesionPanLayout.setHorizontalGroup(
            IniciosesionPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IniciosesionPanLayout.createSequentialGroup()
                .addGap(0, 458, Short.MAX_VALUE)
                .addGroup(IniciosesionPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IniciosesionPanLayout.createSequentialGroup()
                        .addGroup(IniciosesionPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UsuarioText)
                            .addComponent(ContrasenaText)
                            .addComponent(CargoCombo, 0, 147, Short.MAX_VALUE))
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IniciosesionPanLayout.createSequentialGroup()
                        .addComponent(InicioSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))))
        );
        IniciosesionPanLayout.setVerticalGroup(
            IniciosesionPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IniciosesionPanLayout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(UsuarioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContrasenaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CargoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(InicioSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(IniciosesionPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(IniciosesionPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContrasenaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContrasenaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContrasenaTextActionPerformed

    private void UsuarioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuarioTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsuarioTextActionPerformed

    private void InicioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InicioSesionActionPerformed
   // 1) Leemos usuario + contraseña
        String usuario = UsuarioText.getText();
        char[] contrasenachar = ContrasenaText.getPassword();
        String contraseña = new String(contrasenachar);

        // 2) Leemos el rol seleccionado COMO String
        String rolSeleccionado = (String) CargoCombo.getSelectedItem();
        if (rolSeleccionado == null || rolSeleccionado.equals("--Seleccione Cargo--")) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un rol antes de iniciar sesión.");
            return;
        }

        // 3) Cargamos ejemplos de usuarios (para que existan en las listas estáticas)
        gio.cargarAdministradorEjemplo();
        Agente.cargarAgentesEjemplo();
        Propietario.cargarPropietariosEjemplo();
        ClienteUsuario.cargarClientesUsuarioEjemplo();

        // 4) Verificamos usuario+contraseña
        Usuarios usuarioLogueadoObj = Metodos.verificarUsuario(usuario, contraseña);

        if (usuarioLogueadoObj != null) {
            // 5) Comparamos el cargo real con el seleccionado
            if (!usuarioLogueadoObj.getCargo().equalsIgnoreCase(rolSeleccionado)) {
                JOptionPane.showMessageDialog(this, "Los datos ingresados son incorrectos");
                return;
            }

            // 6) Guardamos en la variable estática el ID real de quien inició sesión
            iniciosesion.usuarioLogueado = usuarioLogueadoObj.getUsuario();
            Metodos.setCargo(usuarioLogueadoObj);

            // 7) Abrimos la ventana principal (por ejemplo Administrador)
            Administrador ventana = new Administrador(usuarioLogueadoObj);
            ventana.setVisible(true);
            ventana.mostrarPanelSegunCargo();
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Los datos ingresados son incorrectos");
        }
    
    }//GEN-LAST:event_InicioSesionActionPerformed

    private void CargoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargoComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CargoComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(iniciosesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(iniciosesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(iniciosesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(iniciosesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new iniciosesion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CargoCombo;
    private javax.swing.JPasswordField ContrasenaText;
    private javax.swing.JButton InicioSesion;
    private javax.swing.JPanel IniciosesionPan;
    private javax.swing.JTextField UsuarioText;
    // End of variables declaration//GEN-END:variables
}



